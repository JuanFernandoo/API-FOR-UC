// <auto-generated />
using System;
using For_u.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace For_u.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241017040622_AddUsuarioToUsers")]
    partial class AddUsuarioToUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("For_u.Models.Comentarios", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComentarioId"));

                    b.Property<int>("ComentarioCreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ComentarioTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacionComentario")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("ComentarioId");

                    b.HasIndex("ComentarioCreadoPor");

                    b.HasIndex("PostId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("For_u.Models.Comunidades", b =>
                {
                    b.Property<int>("ComunidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComunidadId"));

                    b.Property<int>("ComunidadCreadaPor")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionComunidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacionComunidad")
                        .HasColumnType("datetime2");

                    b.Property<string>("TituloComunidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComunidadId");

                    b.HasIndex("ComunidadCreadaPor");

                    b.ToTable("Comunidades");
                });

            modelBuilder.Entity("For_u.Models.Posts", b =>
                {
                    b.Property<int>("postId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("postId"));

                    b.Property<int>("comunidadId")
                        .HasColumnType("int");

                    b.Property<string>("descripcionPost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechaCreacionPost")
                        .HasColumnType("datetime2");

                    b.Property<int>("postCreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("tituloPost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postId");

                    b.HasIndex("comunidadId");

                    b.HasIndex("postCreadoPor");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("For_u.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("For_u.Models.Comentarios", b =>
                {
                    b.HasOne("For_u.Models.Users", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("ComentarioCreadoPor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("For_u.Models.Posts", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("For_u.Models.Comunidades", b =>
                {
                    b.HasOne("For_u.Models.Users", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("ComunidadCreadaPor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("For_u.Models.Posts", b =>
                {
                    b.HasOne("For_u.Models.Comunidades", "Comunidades")
                        .WithMany()
                        .HasForeignKey("comunidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("For_u.Models.Users", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("postCreadoPor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comunidades");

                    b.Navigation("UsuarioCreador");
                });
#pragma warning restore 612, 618
        }
    }
}
